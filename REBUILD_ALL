#!/bin/bash

# Parse command line arguments
BUILDX=false
BAKE=false

for arg in "$@"
do
    case $arg in
        --buildx)
        BUILDX=true
        shift
        ;;
        --bake)
        BAKE=true
        shift
        ;;
    esac
done

# Set environment variables based on arguments
if [ "$BAKE" = true ]; then
    export COMPOSE_BAKE=true
    echo "Bake mode enabled"
else
    echo "Bake mode disabled"
fi

docker-compose down -v
#docker rmi vhs_backend vhs_frontend  # replace with your exact image names

# wipe everything
docker rmi $(docker images -q) -f

# Configure buildx if requested
if [ "$BUILDX" = true ]; then
    echo "Setting up Docker Buildx"
    docker buildx create --use
fi

# Build using the appropriate command
if [ "$BAKE" = true ]; then
    echo "Building with bake"
    docker-compose -f docker-compose.yml -f docker-compose.build.yml build
else
    echo "Building normally"
    docker-compose build
fi

docker-compose up -d
docker-compose ps

sleep 15

docker exec -it vhs-db-1 psql -U user -d vhsdb -c "\dt"
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/01_setup_database.sql
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/02_create_quotes_table.sql
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/03_course_tables.sql
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/04_update_user_table.sql
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/05_todo_table.sql
docker exec -i vhs-db-1 psql -U user -d vhsdb < backend/sql/06_create_default_users.sql
docker exec -it vhs-db-1 psql -U user -d vhsdb -c "\dt"
docker exec -it vhs-db-1 psql -U user -d vhsdb -c "\q"

docker exec -it vhs-db-1 psql -U user -d vhsdb -c "SELECT id, username, email, password FROM users;"